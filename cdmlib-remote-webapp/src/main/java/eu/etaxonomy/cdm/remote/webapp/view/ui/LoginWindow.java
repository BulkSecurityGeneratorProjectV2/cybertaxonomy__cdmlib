// $Id$
/**
* Copyright (C) 2009 EDIT
* European Distributed Institute of Taxonomy 
* http://www.e-taxonomy.eu
* 
* The contents of this file are subject to the Mozilla Public License Version 1.1
* See LICENSE.TXT at the top of this package for the full license terms.
*/
package eu.etaxonomy.cdm.remote.webapp.view.ui;

import static com.vaadin.ui.Notification.TYPE_ERROR_MESSAGE;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContext;
import org.springframework.security.core.context.SecurityContextHolder;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;

/**
 * @author a.oppermann
 * @date 08.04.2013
 *
 */
public class LoginWindow extends CustomComponent {
	
	Logger logger = Logger.getLogger(LoginWindow.class);

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button sendButton;
	@AutoGenerated
	private PasswordField passwordField;
	@AutoGenerated
	private TextField userName;
	@Autowired
    private AuthenticationManager authenticationManager;
	
	private Authentication authentication;

	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LoginWindow() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		handleButtonLogic();
	}


	private void handleButtonLogic() {
		sendButton.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				//					logger.info("pass validation");
				//					String username = userName.getValue();
				//					String password = passwordField.getValue();
				//					logger.info(username);
				//					logger.info(password);
				UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken("admin", "kups366+RU");//new UsernamePasswordAuthenticationToken(username, password);
				logger.info("token: "+token);
				try{
					authentication = authenticationManager.authenticate(token);
					SecurityContext context = SecurityContextHolder.getContext();
					context.setAuthentication(authentication);		
					logger.info("logged in");

				}catch(BadCredentialsException e){
					Notification.show("Bad credentials", TYPE_ERROR_MESSAGE);
					logger.info("FAILED");
				}
			}
		});
	}


	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// userName
		userName = new TextField();
		userName.setCaption("Username");
		userName.setImmediate(false);
		userName.setWidth("-1px");
		userName.setHeight("-1px");
		mainLayout.addComponent(userName, "top:176.0px;left:160.0px;");
		
		// passwordField
		passwordField = new PasswordField();
		passwordField.setCaption("Password");
		passwordField.setImmediate(false);
		passwordField.setWidth("-1px");
		passwordField.setHeight("-1px");
		mainLayout.addComponent(passwordField, "top:220.0px;left:160.0px;");
		
		// sendButton
		sendButton = new Button();
		sendButton.setCaption("Send");
		sendButton.setImmediate(true);
		sendButton.setWidth("-1px");
		sendButton.setHeight("-1px");
		mainLayout.addComponent(sendButton, "top:260.0px;left:160.0px;");
		
		return mainLayout;
	}

}
