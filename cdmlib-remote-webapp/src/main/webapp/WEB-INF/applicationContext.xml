<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/tx   http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/security   http://www.springframework.org/schema/security/spring-security-3.0.xsd
    ">
       
   <!-- include default application context and customization -->
    <import resource="classpath:/eu/etaxonomy/cdm/defaultApplicationContext.xml"/>
    <bean id="persistentTermInitializer" class="eu.etaxonomy.cdm.database.PersistentTermInitializer">
       <property name="omit" value="false" />
    </bean>
   <context:component-scan base-package="eu/etaxonomy/cdm/ext" />
   
   <import resource="classpath:/eu/etaxonomy/cdm/remote.xml"/>
    
    <context:component-scan base-package="eu/etaxonomy/cdm/io">
        <context:exclude-filter type="regex" expression="eu\.etaxonomy\.cdm\.io\.pesi.*" />
        <context:exclude-filter type="regex" expression="eu\.etaxonomy\.cdm\.io\.faunaEuropaea.*" />
        <context:exclude-filter type="regex" expression="eu\.etaxonomy\.cdm\.io\.erms.*" />
        <context:exclude-filter type="regex" expression="eu\.etaxonomy\.cdm\.io\.eflora.*" />
        <context:exclude-filter type="regex" expression="eu\.etaxonomy\.cdm\.io\.berlinModel.*" />
    </context:component-scan>
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties">
		  <props>
		      <prop key="eu.etaxonomy.cdm.base.path">${user.home}/.cdmLibrary/</prop>
		      <prop key="eu.etaxonomy.cdm.search.index.path">${user.home}/.cdmLibrary/index/</prop>
		      <prop key="eu.etaxonomy.cdm.ehcache.diskstore.path">${user.home}/.cdmLibrary/ehcache</prop>
		  </props>
        </property>
	</bean>
 
    <!-- enable the configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- import additional beans into the root context -->
    <import resource="applicationContext.views.xml"/>
    
    <!-- CONFIGURE WEB APPLICATION HERE -->
    <import resource="datasources/configurable.xml" />
    
    <context:annotation-config/>
    <bean class="eu.etaxonomy.cdm.remote.config.LoggingConfigurer">
    </bean>
    
     <!-- OAI-PMH TODO externalize? -->
     <bean name="taxonOaiPmhController" class="eu.etaxonomy.cdm.remote.controller.oaipmh.TaxonOaiPmhController">
	   <property name="cachingModel" ref="taxonOaiPmhCacheMapping"/>
	 </bean>
	
	<bean name="taxonOaiPmhCacheMapping" class="org.springmodules.cache.provider.ehcache.EhCacheCachingModel">
	        <property name="cacheName" value="eu.etaxonomy.cdm.remote.controller.TaxonOaiPmhController.resumptionToken"/>
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <property name="configLocation" value="classpath:/eu/etaxonomy/cdm/remote/ehcache.xml" />
        <property name="shared" value="true"/>
    </bean>

	<bean id="serializableFactory" class="org.springmodules.cache.serializable.XStreamSerializableFactory"/>
	
	<bean id="cacheProviderFacade" class="org.springmodules.cache.provider.ehcache.EhCacheFacade">
	    <property name="cacheManager" ref="cacheManager" />
	    <property name="serializableFactory" ref="serializableFactory"/>
	</bean>

	<!--  
    ======= Security ======= 
    -->
    <security:http realm="SecRemoting" use-expressions="true">
        <security:http-basic/>
        <security:intercept-url pattern="/**" access="isAuthenticated()" requires-channel="any"/>
        <security:port-mappings>
			<security:port-mapping http="8080" https="8443"/>
		</security:port-mappings>
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userService">
        	<security:password-encoder ref="passwordEncoder">
        		<security:salt-source ref="saltSource" />
        	</security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
    
    <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="getUsername"/>
    </bean>

    <bean id="digestProcessingFilter"
          class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
        <property name="userDetailsService" ref="userService" />
        <property name="authenticationEntryPoint" ref="digestProcessingFilterEntryPoint" />
    </bean>

    <bean id="digestProcessingFilterEntryPoint"
          class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
        <property name="realmName" value="ThisIsTheDigestRealm" />
        <property name="key" value="acegi" />
        <property name="nonceValiditySeconds" value="10" />
    </bean>

    <bean id="springSecurityFilterChain"
          class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="ant">
            <security:filter-chain pattern="/**"
                                   filters="securityContextPersistenceFilter,httpSessionContextIntegrationFilter,
                                   digestProcessingFilter,exceptionTranslationFilter,filterSecurityInterceptor" />
        </security:filter-chain-map>
    </bean>

    <bean id="httpSessionContextIntegrationFilter"
          class="org.springframework.security.web.context.HttpSessionContextIntegrationFilter" />
          
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter" />
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </list>
        </property>
    </bean>

    <bean id="exceptionTranslationFilter"  class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint"
                  ref="digestProcessingFilterEntryPoint" />
    </bean>

	<bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>
	
</beans>