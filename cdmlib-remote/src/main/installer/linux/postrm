#!/bin/sh
# postrm script for cdmserver
#
# see: dh_installdeb(1)

set -e

#variables
CDM_HOME="/opt/cdmserver/"
CDM_LIBRARY=$CDM_HOME".cdmLibrary"
LOG="/var/log/cdmserver/"
bindir="/etc/init.d/"

SERVERSCRIPT="cdmserver"
SERVERJAR="cdmserver-standalone.jar"
SERVERCONF="datasources.xml"

CDM_USER="root"
CDM_GROUP="root"
USEREXIST=$(grep $CDM_USER /etc/passwd)
GROUPEXIST=$(grep $CDM_GROUP /etc/passwd)


# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    
    #stopping the server
    if [ -e $bindir$SERVERSCRIPT ]
    then
    $bindir$SERVERSCRIPT stop
    fi

    #removing the daemon script
    rm -f $bindir$SERVERSCRIPT
    update-rc.d -f $SERVERSCRIPT remove

    #removing the directories
    rm -rf $CDM_LIBRARY
    rm -rf $CDM_HOME

    #removing the user and group
    #if [ -n "$USEREXIST" ] ; then
    #userdel $CDM_USER
    #fi
    
    #if [ -n "$GROUPEXIST" ] ; then
    #groupdel $CDM_GROUP
    #fi

    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


