<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/tx   http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    ">
	
	<!-- 
		- Accepts a configuration file. 
		- The default configuration file is /WEB-INF/views.xml 
	-->
    <bean  name="viewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
 		<!-- FOR DEBUGING ONLY !!!!   
 		<property name="cache" value="false"/> 
 		 -->
    </bean>
    <!--  
    	- - -  JsonConfigurations - - - 
     -->
     
     <!-- default configuration for RESTful read(/write) service -->
    <bean name="jsonConfig" class="eu.etaxonomy.cdm.remote.json.JsonConfigFactoryBean" init-method="init">
        <property name="jsonBeanProcessorMatcher">
            <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateProxyBeanProcessorMatcher"/>
        </property>
          <property name="jsonBeanProcessors">
			<map>
				<entry key="org.hibernate.proxy.HibernateProxy">
	                    <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateProxyBeanProcessor"/>
	            </entry>
            </map>
        </property>
        <property name="jsonPropertyFilters">
            <list>
                <bean class="eu.etaxonomy.cdm.remote.json.util.InitializedHibernatePropertyFilter"/>
            </list>
        </property>
        <property name="jsonValueProcessors">
            <map>
            	<entry key="org.hibernate.proxy.HibernateProxy">
            		<bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateJSONValueProcessor" />
            	</entry>
                <entry key="java.util.UUID">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.UUIDJSONValueProcessor"/>
                </entry>
                <entry key="org.joda.time.DateTime">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.DateTimeJSONValueProcessor"/>
                </entry>
                <entry key="java.util.Calendar">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.CalendarJSONValueProcessor"/>
                </entry>
                <entry key="org.joda.time.Partial">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.PartialJSONValueProcessor"/>
                </entry>
            </map>
        </property>
        <property name="ignoreJPATransient" value="true" />
    </bean>
    
    <!-- configuration for RESTful taxonomy service -->
    <bean name="jsonConfigTaxonomy" class="eu.etaxonomy.cdm.remote.json.JsonConfigFactoryBean" init-method="init">
        <property name="jsonBeanProcessorMatcher">
            <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateProxyBeanProcessorMatcher"/>
        </property>
          <property name="jsonBeanProcessors">
            <map>
                <entry key="org.hibernate.proxy.HibernateProxy">
                        <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateProxyBeanProcessor"/>
                </entry>
                <entry key="eu.etaxonomy.cdm.model.taxon.Taxon">
                        <bean class="eu.etaxonomy.cdm.remote.json.processor.TaxonomyNodeBeanProcessor"/>
                </entry>
            </map>
        </property>
        <property name="jsonPropertyFilters">
            <list>
                <bean class="eu.etaxonomy.cdm.remote.json.util.InitializedHibernatePropertyFilter"/>
            </list>
        </property>
        <property name="jsonValueProcessors">
            <map>
                <entry key="org.hibernate.proxy.HibernateProxy">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateJSONValueProcessor" />
                </entry>
                <entry key="java.util.UUID">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.UUIDJSONValueProcessor"/>
                </entry>
                <entry key="org.joda.time.DateTime">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.DateTimeJSONValueProcessor"/>
                </entry>
                <entry key="java.util.Calendar">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.CalendarJSONValueProcessor"/>
                </entry>
                <entry key="org.joda.time.Partial">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.PartialJSONValueProcessor"/>
                </entry>
            </map>
        </property>
        <property name="excludes">
            <list value-type="java.lang.String">
                <value>id</value>
                <value>cacheStrategy</value>
            </list>
        </property>
        <property name="ignoreJPATransient" value="true" />
    </bean> 
    
    <!-- configuration for RESTful portal service -->
    
    <bean name="jsonConfigPortal" class="eu.etaxonomy.cdm.remote.json.JsonConfigFactoryBean" init-method="init">
        <property name="jsonBeanProcessorMatcher">
            <!-- <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateProxyBeanProcessorMatcher"/> -->
            <bean class="eu.etaxonomy.cdm.remote.json.processor.CdmBeanProcessorMatcher"/>
        </property>
          <property name="jsonBeanProcessors">
            <map>
                <entry key="org.hibernate.proxy.HibernateProxy">
                        <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateProxyBeanProcessor"/>
                </entry>
                <entry key="eu.etaxonomy.cdm.model.taxon.Taxon">
                        <bean class="eu.etaxonomy.cdm.remote.json.processor.TaxonBeanProcessor"/>
                </entry>
                <entry key="eu.etaxonomy.cdm.model.name.TaxonNameBase">
                        <bean class="eu.etaxonomy.cdm.remote.json.processor.TaxonNameBaseBeanProcessor"/>
                </entry>   
                <entry key="eu.etaxonomy.cdm.model.common.TermBase">
                        <bean class="eu.etaxonomy.cdm.remote.json.processor.TermBaseBeanProcessor"/>
                </entry>   
            </map>
        </property>
        <property name="jsonPropertyFilters">
            <list>
                <bean class="eu.etaxonomy.cdm.remote.json.util.InitializedHibernatePropertyFilter"/>
            </list>
        </property>
        <property name="jsonValueProcessors">
            <map>
                <entry key="org.hibernate.proxy.HibernateProxy">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.HibernateJSONValueProcessor" />
                </entry>
                <entry key="java.util.UUID">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.UUIDJSONValueProcessor"/>
                </entry>
                <entry key="org.joda.time.DateTime">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.DateTimeJSONValueProcessor"/>
                </entry>
                <entry key="java.util.Calendar">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.CalendarJSONValueProcessor"/>
                </entry>
                <entry key="org.joda.time.Partial">
                    <bean class="eu.etaxonomy.cdm.remote.json.processor.PartialJSONValueProcessor"/>
                </entry>
            </map>
        </property>
        <property name="excludes">
            <list value-type="java.lang.String">
                <value>id</value>
                <value>annotations</value>
                <value>cacheStrategy</value>
                <value>markers</value>
            </list>
        </property>
        
        <property name="ignoreJPATransient" value="true" />
    </bean> 
</beans>